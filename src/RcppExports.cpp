// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// BSbasis
arma::mat BSbasis(arma::vec t, double d0);
RcppExport SEXP _csNet_BSbasis(SEXP tSEXP, SEXP d0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type t(tSEXP);
    Rcpp::traits::input_parameter< double >::type d0(d0SEXP);
    rcpp_result_gen = Rcpp::wrap(BSbasis(t, d0));
    return rcpp_result_gen;
END_RCPP
}
// checkDAG
bool checkDAG(arma::mat G);
RcppExport SEXP _csNet_checkDAG(SEXP GSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type G(GSEXP);
    rcpp_result_gen = Rcpp::wrap(checkDAG(G));
    return rcpp_result_gen;
END_RCPP
}
// updates
arma::vec updates(arma::cube B, arma::mat X, arma::mat T, arma::vec t, arma::vec a, double a0, double b0);
RcppExport SEXP _csNet_updates(SEXP BSEXP, SEXP XSEXP, SEXP TSEXP, SEXP tSEXP, SEXP aSEXP, SEXP a0SEXP, SEXP b0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type T(TSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type t(tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type a0(a0SEXP);
    Rcpp::traits::input_parameter< double >::type b0(b0SEXP);
    rcpp_result_gen = Rcpp::wrap(updates(B, X, T, t, a, a0, b0));
    return rcpp_result_gen;
END_RCPP
}
// updateG
arma::mat updateG(arma::mat X, arma::mat T, arma::mat G, arma::vec s, arma::vec t, double r, double z, double v);
RcppExport SEXP _csNet_updateG(SEXP XSEXP, SEXP TSEXP, SEXP GSEXP, SEXP sSEXP, SEXP tSEXP, SEXP rSEXP, SEXP zSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type T(TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type G(GSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type s(sSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type t(tSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    Rcpp::traits::input_parameter< double >::type z(zSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(updateG(X, T, G, s, t, r, z, v));
    return rcpp_result_gen;
END_RCPP
}
// updater
double updater(arma::mat G, double a0, double b0);
RcppExport SEXP _csNet_updater(SEXP GSEXP, SEXP a0SEXP, SEXP b0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type G(GSEXP);
    Rcpp::traits::input_parameter< double >::type a0(a0SEXP);
    Rcpp::traits::input_parameter< double >::type b0(b0SEXP);
    rcpp_result_gen = Rcpp::wrap(updater(G, a0, b0));
    return rcpp_result_gen;
END_RCPP
}
// updatet
Rcpp::List updatet(arma::cube B, arma::mat X, arma::mat T, arma::vec s, arma::vec t, arma::vec a, double s0);
RcppExport SEXP _csNet_updatet(SEXP BSEXP, SEXP XSEXP, SEXP TSEXP, SEXP sSEXP, SEXP tSEXP, SEXP aSEXP, SEXP s0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type T(TSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type s(sSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type t(tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type s0(s0SEXP);
    rcpp_result_gen = Rcpp::wrap(updatet(B, X, T, s, t, a, s0));
    return rcpp_result_gen;
END_RCPP
}
// updatev
double updatev(arma::cube B, double v, double a0, double b0);
RcppExport SEXP _csNet_updatev(SEXP BSEXP, SEXP vSEXP, SEXP a0SEXP, SEXP b0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    Rcpp::traits::input_parameter< double >::type a0(a0SEXP);
    Rcpp::traits::input_parameter< double >::type b0(b0SEXP);
    rcpp_result_gen = Rcpp::wrap(updatev(B, v, a0, b0));
    return rcpp_result_gen;
END_RCPP
}
// updatez
double updatez(arma::vec a, double z, double a0, double b0);
RcppExport SEXP _csNet_updatez(SEXP aSEXP, SEXP zSEXP, SEXP a0SEXP, SEXP b0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type z(zSEXP);
    Rcpp::traits::input_parameter< double >::type a0(a0SEXP);
    Rcpp::traits::input_parameter< double >::type b0(b0SEXP);
    rcpp_result_gen = Rcpp::wrap(updatez(a, z, a0, b0));
    return rcpp_result_gen;
END_RCPP
}
// updatea
arma::vec updatea(arma::cube B, arma::mat X, arma::mat T, arma::vec s, arma::vec t, double z);
RcppExport SEXP _csNet_updatea(SEXP BSEXP, SEXP XSEXP, SEXP TSEXP, SEXP sSEXP, SEXP tSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type T(TSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type s(sSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type t(tSEXP);
    Rcpp::traits::input_parameter< double >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(updatea(B, X, T, s, t, z));
    return rcpp_result_gen;
END_RCPP
}
// updateB
arma::cube updateB(arma::cube B, arma::mat X, arma::mat T, arma::mat G, arma::vec s, arma::vec t, arma::vec a, double v);
RcppExport SEXP _csNet_updateB(SEXP BSEXP, SEXP XSEXP, SEXP TSEXP, SEXP GSEXP, SEXP sSEXP, SEXP tSEXP, SEXP aSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type T(TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type G(GSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type s(sSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type t(tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(updateB(B, X, T, G, s, t, a, v));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_csNet_BSbasis", (DL_FUNC) &_csNet_BSbasis, 2},
    {"_csNet_checkDAG", (DL_FUNC) &_csNet_checkDAG, 1},
    {"_csNet_updates", (DL_FUNC) &_csNet_updates, 7},
    {"_csNet_updateG", (DL_FUNC) &_csNet_updateG, 8},
    {"_csNet_updater", (DL_FUNC) &_csNet_updater, 3},
    {"_csNet_updatet", (DL_FUNC) &_csNet_updatet, 7},
    {"_csNet_updatev", (DL_FUNC) &_csNet_updatev, 4},
    {"_csNet_updatez", (DL_FUNC) &_csNet_updatez, 4},
    {"_csNet_updatea", (DL_FUNC) &_csNet_updatea, 6},
    {"_csNet_updateB", (DL_FUNC) &_csNet_updateB, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_csNet(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
